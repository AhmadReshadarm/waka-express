# version: '2'

# services:
#   db:
#     image: mysql
#     command: mysqld --default-authentication-plugin=mysql_native_password
#     restart: always
#     expose:
#       - '3306'
#     ports:
#       - '3306:3306'
#     environment:
#       MYSQL_DATABASE: ${MYSQL_DATABASE}
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#     volumes:
#       - '/var/lib/mysql-data:/var/lib/mysql'

#   phpmyadmin:
#     image: phpmyadmin:latest
#     restart: always
#     ports:
#       - 8080:80
#     environment:
#       PMA_HOST: ${MYSQL_HOST}
#       PMA_PORT: 3306

networks:
  mynet:

volumes:
  mariadb_data:
  phpmyadmin_data:

services:
  mariadb:
    image: mariadb:10.4.8-bionic
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # MYSQL_USER: admin
      # MYSQL_PASSWORD: password
    volumes:
      - mariadb_data:/var/lib/mysql/
    networks:
      - mynet

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:fpm-alpine
    environment:
      PMA_HOST: ${MYSQL_HOST}
    volumes:
      - phpmyadmin_data:/var/www/html/
    networks:
      - mynet
    depends_on:
      - mariadb
  nginx:
    image: nginx:1.17.4-alpine
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
      - phpmyadmin_data:/var/www/html/:ro
    ports:
      - '90:80'
    networks:
      - mynet
    depends_on:
      - mariadb
      - phpmyadmin
# authorization:
#   build:
#     context: .
#     dockerfile: ./authorization/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
# orders:
#   build:
#     context: .
#     dockerfile: ./orders/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
# catalog:
#   build:
#     context: .
#     dockerfile: ./catalog/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
# images:
#   build:
#     context: .
#     dockerfile: ./images/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
#   volumes:
#     - images_data:/app/images/files
# reviews:
#   build:
#     context: .
#     dockerfile: ./reviews/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
# questions:
#   build:
#     context: .
#     dockerfile: ./questions/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
# wishlists:
#   build:
#     context: .
#     dockerfile: ./wishlists/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
# banners:
#   build:
#     context: .
#     dockerfile: ./banners/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
# news:
#   build:
#     context: .
#     dockerfile: ./news/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
# mailer:
#   build:
#     context: .
#     dockerfile: ./mailer/Dockerfile
#   command: sh -c 'wait-for db:3306 -- npm run start'
#   depends_on:
#     - db
# swagger:
#   build:
#     context: .
#     dockerfile: ./swagger/Dockerfile
#   command: sh -c 'npm run start'
# gateway:
#   build:
#     context: .
#     dockerfile: ./gateway/Dockerfile
#   command: sh -c 'npm run start'
# ports:
#   - '4010:4010'
# expose:
#   - '4010'

# volumes:
#   db_data:
# images_data:
#   driver: local
